@page "/"
@rendermode InteractiveWebAssembly
@using global::Fishzor.Client.Components
@using Fishzor.Client.Services
@inject IJSRuntime JSRuntime
@inject FishService FishService
@implements IDisposable
@if (FishService == null)
{
    <p>FishService is not available.</p>
}
else
{
    <style>
        #fishTank {
            width: 100%;
            height: 100%;
            position: relative;
        }
    </style>
    <script>
        window.getTankRect = () => {
            var element = document.getElementById("fishTank");
            if (!element) return null;

            return element.getBoundingClientRect();
        }    
    </script>
    <div id="fishTank">
        <PageTitle>Fishy fishy fish</PageTitle>

        <button type="button" class="btn btn-primary btn-sm" @onclick="FishService.AddFish">Add fish</button>
        <button type="button" class="btn btn-primary btn-sm" @onclick="FishService.RemoveFish"
            disabled="@(FishService.FishComponents.Count == 0)">
            Remove fish
        </button>
        @foreach (var fishComponent in FishService.FishComponents)
        {
            @fishComponent
        }
    </div>
}


@code {
    protected override void OnInitialized()
    {
        if (FishService != null)
        {
            FishService.OnChange += StateHasChanged;
        }
    }

    public void Dispose()
    {
        if (FishService != null)
        {
            FishService.OnChange -= StateHasChanged;
        }
    }
}