@inject FishTankState FishTankState

<div class="chat-messages">
    @foreach (var message in FishTankState.Messages)
    {
        <div class="message @GetMessageClass(message)" style="background-color: @GetColorRgba(message.Color);">
            <span class="message-text @(message.ClientId == FishTankState.ClientConnectionId ? "own-message" : "")">
                @message.Message
            </span>
        </div>
    }
</div>

<style>
    .chat-messages {
        position: fixed;
        top: 10px;
        left: 10px;
        max-width: 300px;
        max-height: 50vh;
        overflow-y: auto;
        border-radius: 5px;
        padding: 10px;
    }

    .message {
        margin-bottom: 10px;
        padding: 5px 10px;
        border-radius: 15px;
        color: #333;
        text-shadow: none;
    }

    .own-message {
        font-weight: bold;
        font-style: italic;
    }

    .message-text {
        word-wrap: break-word;
    }
</style>

@code {
    protected override void OnInitialized()
    {
        FishTankState.OnMessageReceived += (message) => InvokeAsync(StateHasChanged);
    }

    private string GetMessageClass(FishMessage message) =>
    message.ClientId == FishTankState.ClientConnectionId ? "own-message" : "other-message";

    private string GetColorRgba(FishColor color)
    {
        var (r, g, b) = color switch
        {
            FishColor.Blue => (173, 216, 230), // Light Blue
            FishColor.Green => (144, 238, 144), // Light Green
            FishColor.Orange => (255, 218, 185), // Peach
            FishColor.Pink => (255, 182, 193), // Light Pink
            FishColor.Yellow => (255, 255, 224), // Light Yellow
            FishColor.Red => (255, 160, 122), // Light Salmon
            _ => (220, 220, 220), // Light Gray
        };
        return $"rgba({r}, {g}, {b}, .65)"; // 0.7 opacity for slight transparency
    }
}